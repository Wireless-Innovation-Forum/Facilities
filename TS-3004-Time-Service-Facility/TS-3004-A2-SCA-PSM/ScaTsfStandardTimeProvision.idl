/*-----------------------------------------------------------------------------*/
/*    Distributed by Wireless Innovation Forum                                 */
/*    Copyright 2021 SDS Harmonized Timing Service Task Group.                 */
/*    All Rights Reserved.                                                     */
/*    Licensed under the Apache License, Version 2.0 (the "License");          */
/*    you may not use this file except in compliance with the License.         */
/*    You may obtain a copy of the License at                                  */
/*                                                                             */
/* https://github.com/Wireless-Innovation-Forum/Facilities/blob/master/LICENSE */
/*                                                                             */
/*    Unless required by applicable law or agreed to in writing, software      */
/*    distributed under the License is distributed on an "AS IS" BASIS,        */
/*    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. */
/*    See the License for the specific language governing permissions and      */
/*    limitations under the License.                                           */
/*-----------------------------------------------------------------------------*/
/* Title : ScaTsfStandardTimeProvision.idl                                     */
/* Date:  25 December 2021                                                     */
/* Version:  V1.1.0                                                            */
/* Purpose: The ScaTsfStandardTimeProvision.idl file is specified as the IDL   */
/*          file specifying the standard time provision specified by section   */
/*          3.1.4 of Time Service Facility PIM Specification                   */
/*-----------------------------------------------------------------------------*/

#ifndef __SCA_TSF_STANDARD_TIME_PROVISION_DEFINED
#define __SCA_TSF_STANDARD_TIME_PROVISION_DEFINED
#include "ScaTsfTypes.idl"
module WInnf_Sca
{
  module TimeService
  {
    module SystemTime  
    {
      interface StandardTimeProvision
      {
        void provideTAI(in TimeValue providedTAI,
                        in TimeValue timeStamp,
                        in TimeUncertainty time_Uncertainty,
                        in SourceId source_Id)
          raises(FutureTimeStamp,
                 UnavailableService);
        void provideUTC(in TimeValue providedUTC,
                        in TimeValue timeStamp,
                        in TimeUncertainty time_Uncertainty,
                        in SourceId source_Id)
          raises(FutureTimeStamp,
                 UnavailableService);
      };
    };
  };
};
#endif // __SCA_TSF_STANDARD_TIME_PROVISION_DEFINED